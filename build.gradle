plugins {
	id 'org.springframework.boot' version '2.3.9.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'in.mozark'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
    springStatemachineVersion = '2.0.1.RELEASE'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
	
   implementation group: 'commons-io', name: 'commons-io', version: '2.6'
}

test {
	useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.statemachine:spring-statemachine-bom:${springStatemachineVersion}"
    }
    }
    
    
    
 //copy config
task copyConfig(type: Copy) {
    into project.buildDir.path+"/libs/config"
    from "config"
}

//copy dependencies
task copyRuntimeLibs(type: Copy) {
    into project.buildDir.path+"/libs/lib"
    from configurations.compile
}	

task createFolder{
    def configDir = new File(project.buildDir.path+"/libs", "config")
    def logDir = new File(project.buildDir.path+"/libs", "log")
    def libDir = new File(project.buildDir.path+"/libs", "lib")

    if(!logDir.exists()) {
        logDir.mkdirs()
    }
    delete configDir
    delete libDir

    libDir.mkdirs()
    configDir.mkdirs()
}

task createDistribution(type: Zip) {
   from project.buildDir.path+"/libs"
   include '*'
   include '*/*' 
   archiveName rootProject.name+'-'+version+'.zip'
   destinationDir(new File(project.buildDir.path, "distributions"))
}


task zip{
dependsOn bootJar
dependsOn 'createFolder',  'copyRuntimeLibs' , 'copyConfig' , 'createDistribution'
}

